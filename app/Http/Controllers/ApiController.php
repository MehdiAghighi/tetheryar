<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\TetherPrice;

class ApiController extends Controller
{
    public function api()
    {
//          $txid='2319e13d65d2632dfa8f6d59609f7dcbfa5887842efaadf175f0e756dbd44587';
//         $ch = curl_init();
//         $hash=$txid;
//         $url='https://apilist.tronscan.org/api/transaction-info?hash='.$hash;
//         curl_setopt($ch, CURLOPT_URL, $url);
//         curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

//         $result = curl_exec($ch);
// //        if (curl_errno($ch)) {
// //            return back()->withErrors('The network is currently in trouble. Please register later !');
// //        }
//         $result=json_decode($result);
//         $arr=(array)$result;
//         curl_close($ch);
//         dd($result);



        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        //  $ch = curl_init();

        // curl_setopt($ch, CURLOPT_URL, 'https://api.nobitex.ir/v2/orderbook/USDTIRT');
        // curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

        // $result = curl_exec($ch);
        // $result=json_decode($result); // print json decoded response
        // if (curl_errno($ch)) {
        //     echo 'Error:' . curl_error($ch);
        // }
        // curl_close($ch);

        // $tetherBuyPrice = substr($result->asks[0][0] ,0, 5);
        // $tetherBuyPrice = floor($tetherBuyPrice/10)*10;
        // $tetherSellPrice = $tetherBuyPrice - 200 ;

        // TetherPrice::query()->create([
        //     'buyPrice' => $tetherBuyPrice ,
        //     'sellPrice' => $tetherSellPrice ,
        // ]);
    }

      public function buyPrice()
    {
        return response([
            'buyPrice' => number_format(TetherPrice::getBuyTetherPrice())
        ]);
//        return TetherPrice::getBuyTetherPrice();
    }

    public function sellPrice()
    {
        return response([
            'sellPrice' =>  number_format(TetherPrice::getsellTetherPrice())
        ]);
//        return TetherPrice::getsellTetherPrice();
    }
}
